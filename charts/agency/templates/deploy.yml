apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "agency.releaseName" . }}-web
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "agency.labels" . | nindent 4 }}
    app.kubernetes.io/component: web
spec:
  replicas: {{ .Values.replicas.web }}
  selector:
    matchLabels:
      {{- include "agency.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: web
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "agency.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: web
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yml") . | sha256sum }}
    spec:
      securityContext:
        fsGroup: 33
      {{- if or
        (eq .Values.db.provider "zalando")
        (ne .Values.db.bootstrap.mode "transition") }}
      initContainers:
      - name: initdb
        {{- include "agency.pod" . | indent 8 }}
        command: [ initialize_agency_db, $(CONFIG_PATH)#agency ]
      {{- end }}
      containers:
      - name: api
        {{- include "agency.pod" . | indent 8}}
        - name: UWSGI_ARGS
          value: --threads 8 --processes 4 --buffer-size 32768
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "agency.releaseName" . }}-secret
              key: session
        - name: PW_RECOVERY_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "agency.releaseName" . }}-secret
              key: passrecovery
        {{- with .Values.agency.companies }}
        {{- if or .enabled $.Values.companies.enabled }}
        - name: SHARED_SECRET
          valueFrom:
            secretKeyRef:
              {{- if $.Values.companies.enabled }}
              name: {{ include "companies.releaseName" $ }}-secret
              {{- else if .shared_secret.source }}
              name: {{ .shared_secret.source }}
              {{- else }}
              name: {{ include "agency.releaseName" $ }}-secret
              {{- end }}
              key: shared_secret
        {{- end }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources.api | nindent 10 }}
        ports:
        - containerPort: 6543
          name: api
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /api/whoami
            port: 6543
          initialDelaySeconds: 5
          periodSeconds: 15
          timeoutSeconds: 5
      {{- /* common frontend envs */}}
      {{- define "commonEnv" }}
        - name: AGENCY_VERSION
          value: {{ include "agency.appVersion" . | quote }}
        - name: AGENCY_ENV
          value: {{ .Values.agency.env }}
        - name: AGENCY_SUPPORTWIDGET
          value: {{ .Values.agency.supportWidget | quote }}
        - name: AGENCY_ISFORTV
          value: {{ .Values.agency.forTV | quote }}
        {{- if .Values.ingress.enabled }}
        - name: AGENCY_API
          value: {{ ternary "https" "http" (default .Values.global.agency.tls .Values.ingress.tls) -}}
            :// {{- index (default .Values.global.agency.admin .Values.ingress.admin).hostnames 0 -}}
            /api
        {{- end }}
        {{- if .Values.agency.companies.enabled }}
        - name: COMPANIES_API
          {{- if .Values.companies.enabled }}
          value: {{ ternary "https" "http" (default .Values.global.companies.tls .Values.companies.ingress.tls ) -}}
            :// {{- index (default .Values.global.companies.hostnames .Values.companies.ingress.hostnames) 0 -}} /api
          {{- else }}
          value: {{ .Values.agency.companies.externalApi | default ( print .Values.agency.companies.frontend "/api" ) }}
          {{- end }}
        {{- end }}
      {{- end }}
      - name: admin
        image: {{ .Values.image.registry -}} /agency/client: {{- include "agency.clientImageTag" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
        env:
        {{- include "commonEnv" . }}
        {{- $rescheck := .Values.ingress.rescheck }}
        {{- if .Values.global }}{{ if .Values.global.agency }}
        {{- $rescheck = default .Values.global.agency.rescheck $rescheck }}
        {{- end }}{{end}}
        {{- if $rescheck }}
        - name: AGENCY_RESCHECK_URL
          value: {{ index $rescheck.hostnames 0 }}
        {{- end }}
        {{- if .Values.agency.e_factura.enabled }}
        - name: AGENCY_EFACTURA_AUTH_URL
          value: {{ .Values.agency.e_factura.auth_url -}} /anaf-oauth2/v1/authorize
        - name: AGENCY_EFACTURA_CLIENT_ID
          value: {{ .Values.agency.e_factura.client_id }}
        - name: AGENCY_EFACTURA_REDIRECT_URL
          value: {{ ternary "https" "http" (default $.Values.global.agency.tls $.Values.ingress.tls) -}} 
          :// {{- index (default $.Values.global.agency.admin.hostnames $.Values.ingress.hostnames) 0 -}} /efacturaAuth
        {{- end }}
        {{- with .Values.agency.tinymce_key }}
        - name: TINY_MCE_API_KEY
          value: {{ . }}
        {{- end }}
        - name: NGINX_LISTEN
          value: "*:8080"
        ports:
        - containerPort: 8080
          name: admin
          protocol: TCP
        resources:
          {{- toYaml .Values.resources.web | nindent 10 }}
      {{- if .Values.agency.rescheck }}
      - name: rescheck
        image: {{ .Values.image.registry -}} /agency/rescheck: {{- include "agency.rescheckImageTag" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
        env:
        {{- include "commonEnv" . }}
        - name: NGINX_LISTEN
          value: "*:8081"
        ports:
        - containerPort: 8081
          name: rescheck
          protocol: TCP
        resources:
          {{- toYaml .Values.resources.web | nindent 10 }}
      {{- end }}
      {{- $generali := .Values.agency.generali }}
      {{- $efactura := .Values.agency.e_factura }}
      - name: loop
        {{- include "agency.pod" . | indent 8}}
        resources:
          {{- .Values.resources.loop | default $.Values.resources.cron | toYaml | nindent 10 }}
        command: [ python3 ]
        args:
        - -c
        - |
          from apscheduler.schedulers.blocking import BlockingScheduler as Scheduler
          from pyramid.paster import bootstrap, setup_logging
          from agency import tasks
          from agency.model.webhooks import WebhookInstance

          config_file = '/config/agency.ini#agency'
          bootstrap(config_file)
          setup_logging(config_file)
          scheduler = Scheduler()

          {{- if $generali }}
          scheduler.add_job(tasks.generali_check_status, id='generali_check_status', trigger='interval', seconds={{ $generali.loopInterval | default 120 }})
          {{- end }}

          {{- if $efactura.enabled }}
          scheduler.add_job(tasks.e_factura_check_invoice, id='e_factura_check_invoice', trigger='interval', seconds={{ $efactura.loopInterval | default 120 }})
          scheduler.add_job(tasks.e_factura_upload_issued_invoices, id='e_factura_upload_issued_invoices', trigger='interval', seconds=efactura_interval)
          {{- end }}

          scheduler.add_job(WebhookInstance.process_webhooks, id='process_webhooks', trigger='interval', seconds=50)

          scheduler.run()
      volumes:
      - name: config
        configMap:
          name: {{ include "agency.releaseName" . }}-config
          items:
          - key: agency.ini
            path: app/agency.ini
      {{- if eq .Values.db.provider "cnpg" }}
      - name: ssl-cert
        secret:
          secretName: {{ include "agency.releaseName" . }}-db-app-tls
          defaultMode: 416
      {{- end }}
