{{- $clusterName := include "companies.clusterName" . }}
{{- $clone := .Values.db.clone }}
{{- if .Values.global}}{{ if .Values.global.clone }}
{{- $clone = .Values.global.clone }}
{{- end }}{{ end }}
apiVersion: "acid.zalan.do/v1"
kind: postgresql
metadata:
  name: {{ $clusterName }}
  namespace: {{ .Release.Namespace }}
  {{- if .Values.db.controller }}
  annotations:
    acid.zalan.do/controller: {{ .Values.db.controller }}
  {{- end }}
  labels:
    {{- include "companies.labels" . | nindent 4 }}
    {{- with $exporter := .Values.global.db_exporter }}{{ if $exporter.enabled }}
    exporter: "true"
    {{- end }}{{ end }}
spec:
  teamId: {{ .Values.db.teamId }}
  volume: {{ toYaml .Values.db.volume | nindent 4 }}
  numberOfInstances: {{ .Values.replicas.db }}
  users:
    companies: []
  databases:
    companies: companies
  postgresql:
    version: {{ .Values.db.version | quote }}
    parameters: {{ toYaml .Values.db.parameters | nindent 6}}
  {{- if .Values.resources.db }}
  resources: {{ toYaml .Values.resources.db | nindent 4 }}
  {{- end }}
  {{- if $clone }}{{ if not $clone.namespace }}
  clone: {{ toYaml $clone | nindent 4 }}
  {{- else }}
  clone:
    cluster: {{ include "companies.releaseName" . }}-source
  {{- end }}{{ end }}
  {{- with .Values.db.standby }}
  {{- if .enabled }}
  standby:
    s3_wal_path: s3://{{ .bucket }}/spilo/{{ .name | default $clusterName }}/{{ .uid }}/wal/{{ $.Values.db.version }}
  {{- end }}
  {{- end }}
  {{- with $exporter := .Values.global.db_exporter }}{{ if $exporter.enabled }}
  sidecars:
  - name: exporter
    image: {{ $exporter.image }}
    ports:
    - name: http-prom
      containerPort: 9187
      protocol: TCP
    env:
    - name: DATA_SOURCE_NAME
      value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@localhost/postgres
    {{- if len $exporter.extraQueries }}
    - name: PG_EXPORTER_EXTEND_QUERY_PATH
      value: /queries.yaml
  additionalVolumes:
  - name: queries
    mountPath: /queries.yaml
    subPath: queries.yaml
    volumeSource:
      name: config
      configMap:
        name: {{ include "agency.releaseName" $ }}-config
    targetContainers:
    - exporter
    {{- end }}
  {{- end }}{{ end }}
{{- if $clone }}{{ if $clone.namespace }}
---
apiVersion: v1
kind: Secret
metadata:
  name: standby.{{ include "companies.releaseName" . }}-source.credentials
  namespace: {{ .Release.Namespace }}
  labels: 
    {{- include "companies.labels" . | nindent 4 }}
  annotations:
    reflector.v1.k8s.emberstack.com/reflects: "{{ $clone.namespace -}} /standby.
      {{- $clone.cluster | default $clusterName -}} .credentials"
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "companies.releaseName" . }}-source
  namespace: {{ .Release.Namespace }}
  labels: 
    {{- include "companies.labels" . | nindent 4 }}
spec:
  type: ExternalName
  externalName: {{ $clone.cluster | default $clusterName -}} .
    {{- $clone.namespace -}} .svc.cluster.local
  ports:
  - name: postgres
    port: 5432
    protocol: TCP
    targetPort: 5432
{{- end }}{{ end }}
