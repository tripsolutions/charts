apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "companies.releaseName" . }}-api
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "companies.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ .Values.replicas.api }}
  selector:
    matchLabels:
      {{- include "companies.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "companies.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yml") . | sha256sum }}
    spec:
      initContainers:
      - name: initdb
        image: {{ .Values.image.registry -}} /agency/companies-server: {{- include "companies.serverImageTag" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 100
          runAsGroup: 101
        volumeMounts:
        - mountPath: /config
          name: config
          subPath: app
        env:
        - name: CONFIG_PATH
          value: /config/config.ini
        - name: PG_PASS
          valueFrom:
            secretKeyRef: 
                name: companies.{{ include "companies.clusterName" . }}.credentials
                key: password
        command: [ alembic, -c, /config/config.ini, upgrade, head ]
      containers:
      - name: api
        image: {{ .Values.image.registry -}} /agency/companies-server: {{- include "companies.serverImageTag" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 100
          runAsGroup: 101
        volumeMounts:
        - mountPath: /config
          name: config
          subPath: app
        env:
        - name: CONFIG_PATH
          value: /config/config.ini
        - name: PG_PASS
          valueFrom:
            secretKeyRef: 
              name: companies.{{ include "companies.clusterName" . }}.credentials
              key: password
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "companies.releaseName" . }}-secret
              key: auth_pkey
        - name: SHARED_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "companies.releaseName" . }}-secret
              key: shared_secret
        ports:
        - containerPort: 6543
          name: api
          protocol: TCP
        resources:
          {{- toYaml .Values.resources.api | nindent 10 }}
      volumes:
      - name: config
        configMap:
          name: {{ include "companies.releaseName" . }}-config
          items:
          - key: config.ini
            path: app/config.ini
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "companies.releaseName" . }}-frontend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "companies.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
spec:
  replicas: {{ .Values.replicas.frontend }}
  selector:
    matchLabels:
      {{- include "companies.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "companies.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
    spec:
      containers:
      - name: frontend
        image: {{ .Values.image.registry -}} /agency/companies-client: {{- include "companies.clientImageTag" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: AGENCY_API
          {{- if or .Values.companies.agency.api .Values.companies.agency.frontend }}
          value: {{ .Values.companies.agency.api | default ( print .Values.companies.agency.frontend "/api" ) }}
          {{- else }}
          value: {{ ternary "https" "http" .Values.global.agency.tls  -}} 
            :// {{- index .Values.global.agency.admin.hostnames 0 -}} /api
          {{- end }}
        - name: AGENCY_URL
          {{- if .Values.companies.agency.frontend }}
          value: {{ print .Values.companies.agency.frontend "/pub/login" }}
          {{- else }}
          value: {{ ternary "https" "http" .Values.global.agency.tls  -}} 
            :// {{- index .Values.global.agency.admin.hostnames 0 -}} /pub/login
          {{- end }}
        - name: COMPANIES_API
          value: /api
        - name: CUMULUS_VERSION
          value: {{ include "companies.appVersion" . }}
        ports:
        - containerPort: 80
          name: frontend
          protocol: TCP
        resources:
          {{- toYaml .Values.resources.frontend | nindent 10 }}
