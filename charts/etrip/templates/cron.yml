{{ range .Values.cron -}}
kind: CronJob
apiVersion: batch/v1beta1
metadata:
  name: {{ $.Release.Name }}-cron-{{ .name  }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "labels" $ | nindent 4 }}
spec:
  schedule: {{ .schedule | quote }}
  successfulJobsHistoryLimit: {{ .doneHistory | default 3 }}
  failedJobsHistoryLimit: {{ .failedHistory | default 1 }}
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
          - name: job
            {{- include "etripImage" $ | nindent 12 }}
            volumeMounts:
            - mountPath: /config
              name: config
              subPath: etrip
            - mountPath: /tmp/elogger
              name: elogger
            env:
            - name: DB_PASSWORD
              valueFrom:
              {{- if $.Values.db.use_operator }}
                secretKeyRef: 
                  name: etrip. {{- include "clusterName" $ -}} .credentials
                  key: password
              {{- else }}
                secretKeyRef:
                  {{- if $.Values.db.custom_install.password.useSecret }}
                  name: {{ $.Values.db.custom_install.password.fromSecret }}
                  key: {{ $.Values.db.custom_install.password.fromSecretKey }}
                  {{- else }}
                  name: {{ $.Release.Name }}-secrets
                  key: dbpassword
                  {{- end }}
              {{- end }}
            - name: ETRIP_CONFIG
              value: /config
            - name: ETRIP_DSN
              {{- if $.Values.db.use_operator }}
              value: sslmode=disable user=etrip password=$(DB_PASSWORD) host=
                  {{- include "clusterName" $ }}
              {{- else }}
              value: sslmode=disable password=$(DB_PASSWORD) user= 
                  {{- $.Values.db.custom_install.username }} dbname=
                  {{- $.Values.db.custom_install.dbname}} host=
                  {{- $.Values.db.custom_install.host }} port=
                  {{- $.Values.db.custom_install.port }}
              {{- end }}
            {{- if and $.Values.db.use_operator ( gt (int $.Values.replicas.db) 1 ) }}
            - name: ETRIP_DSN_RO
              {{ if $.Values.db.use_operator -}}
              value: sslmode=disable user=etrip password=$(DB_PASSWORD) host=
                {{- include "clusterName" $ }}-repl connect_timeout=1
              {{- else -}}
              value: sslmode=disable password=$(DB_PASSWORD) user= 
                {{- $.Values.db.custom_install.username }} dbname=
                {{- $.Values.db.custom_install.dbname}} host=
                {{- $.Values.db.custom_install.host }} port=
                {{- $.Values.db.custom_install.port }}
              {{- end }}
            {{- end }}
            {{- if $.Values.etrip.searchlogs.enabled }}
            - name: SEARCHLOGS_DBPASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if $.Values.etrip.searchlogs.is_operator }}
                  name: {{ printf "%s.%s.credentials" $.Values.etrip.searchlogs.username $.Values.etrip.searchlogs.host }}
                  key: password
                  {{- else }}
                  name: {{ $.Values.etrip.searchlogs.password.fromSecret }}
                  key: {{ $.Values.etrip.searchlogs.password.fromSecretKey }}
                  {{- end }}
            - name: ETRIP_SEARCHLOGS_DSN
              value: sslmode=disable password=$(SEARCHLOGS_DBPASSWORD) user=
                {{- $.Values.etrip.searchlogs.username }} dbname=
                {{- $.Values.etrip.searchlogs.dbname }} host=
                {{- $.Values.etrip.searchlogs.host }} port=
                {{- $.Values.etrip.searchlogs.port }}
            - name: ETRIP_SEARCHLOGS_TABLE
              value: {{ $.Values.etrip.searchlogs.table }}
            {{- end }}
            {{- if .env }}
            {{- range .env }}
            - name: {{ .key }}
              value: {{ .value }}
            {{- end }}
            {{- end }}
            - name: ETRIP_LOGDIR
              value: /tmp/elogger
            {{- if $.Values.smtpgate.enabled }}
            - name: ETRIP_SMTP_HOST
              value: {{ $.Release.Name }}-admin
            {{- end }}
            {{- with .resources }}
            resources:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            args: 
              - /bin/sh
              - -c
              - |
                {{- .command | toString | nindent 16 }}
                touch /tmp/elogger/elogger.done
          {{- if and $.Values.elogger.enabled (not .nologs ) }}
          - name: sendlogs
            {{- with $.Values.elogger.image }}
            image: {{ .registry -}} / {{- .name -}} : 
              {{- .tag | default $.Values.version | default $.Chart.AppVersion | toString }}
            imagePullPolicy: {{ .pullPolicy }}
            {{ end -}}
            env:
            - name: ENV_CONFIG
              value: "true"
            - name: ELOGGER_DIR
              value: /tmp/elogger
            - name: ELOGGER_DBHOST
              value: {{ $.Values.elogger.db.host }}
            - name: ELOGGER_DBNAME
              value: {{ $.Values.elogger.db.dbname }}
            - name: ELOGGER_DBUSER
              value: {{ $.Values.elogger.db.username }}
            - name: ELOGGER_DBPASS
              valueFrom:
                secretKeyRef: 
                  {{- if $.Values.elogger.db.is_operator }}
                  name: {{ printf "%s.%s.credentials" $.Values.elogger.db.username $.Values.elogger.db.host }}
                  key: password
                  {{- else }}
                  name: {{ $.Values.elogger.db.password.fromSecret }}
                  key: {{ $.Values.elogger.db.password.fromSecretKey }}
                  {{- end }}
            - name: ELOGGER_DBPORT
              value: {{ $.Values.elogger.db.port | quote }}
            - name: ELOGGER_TABLE
              value: {{ $.Values.elogger.db.table }}
            command:
              - sh
              - -c 
              - |
                while true; do
                  if [ -r /tmp/elogger/elogger.done ]; then
                    break
                  fi
                  sendlogs
                  sleep 60
                done
                sendlogs
            volumeMounts:
            - mountPath: /tmp/elogger
              name: elogger
          {{- end }}
          volumes:
          - name: config
            configMap:
              name: {{ $.Release.Name }}-config
              items:
              - key: etrip.json
                path: etrip/config.json
              - key: b2b.json
                path: etrip/b2b.json
              - key: etrip-nginx.conf
                path: etrip/nginx.conf
              {{- if ne (len $.Values.etrip.passwords) 0 }}
              - key: htpasswd
                path: etrip/htpasswd
              {{- end }}
              - key: etrip-fpm.ini
                path: etrip/fpm.ini
          - name: elogger
            emptyDir: {}
---
{{- end }}
