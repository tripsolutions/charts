{{- if and .Values.ingress.enabled .Values.web.enabled }}
{{- if .Values.ingress.auth.enabled }}
{{- $htpasswd := list }}
{{- range .Values.ingress.auth.users }}
{{- $htpasswd = (htpasswd .username .password) | append $htpasswd }}
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-auth
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  auth: {{ $htpasswd | join "\n" | b64enc }}
---
{{- end }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "labels" . | nindent 4 }}
  {{- $annotations := .Values.ingress.annotations }}
  {{- if .Values.ingress.auth.enabled }}
  {{- $authAnnotaaions := dict "nginx.ingress.kubernetes.io/auth-type" "basic" "nginx.ingress.kubernetes.io/auth-secret" (printf "%s-auth" .Release.Name) "nginx.ingress.kubernetes.io/auth-realm" "Authentication Required" }}
  {{- $annotations = merge $authAnnotaaions $annotations }}
  {{- end }}
  {{- if gt (len $annotations) 0 }}
  annotations: {{- toYaml $annotations | nindent 4 }}
  {{- end }}
spec:
  rules:
  {{- range .Values.ingress.hostnames }}
  - host: {{ . | quote }}
    http:
      paths:
      - backend:
          service:
            name: {{ $.Release.Name }}
            port:
              name: http
        pathType: Prefix
        path: /
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
  - hosts: {{ .Values.ingress.hostnames | toJson }}
    secretName: {{ .Release.Name }}-cert
  {{- end }}
{{- end }}
